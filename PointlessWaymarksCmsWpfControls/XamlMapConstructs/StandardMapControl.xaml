<UserControl
    x:Class="PointlessWaymarksCmsWpfControls.XamlMapConstructs.StandardMapControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:map="clr-namespace:MapControl;assembly=MapControl.WPF"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xamlMapConstructs="clr-namespace:PointlessWaymarksCmsWpfControls.XamlMapConstructs"
    d:DataContext="{d:DesignInstance xamlMapConstructs:StandardMapViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Stylus.IsPressAndHoldEnabled="False"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../WpfControlsResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <xamlMapConstructs:MapLocationToVisibilityConverter x:Key="LocationToVisibilityConverter" />

            <DataTemplate x:Key="PolylineItemTemplate">
                <map:MapPolyline
                    Locations="{Binding Locations}"
                    Stroke="Red"
                    StrokeThickness="3" />
            </DataTemplate>

            <Style x:Key="PolylineItemStyle" TargetType="map:MapItem">
                <EventSetter Event="TouchDown" Handler="MapItemTouchDown" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="map:MapItem">
                            <map:MapPolyline
                                x:Name="selectedPath"
                                Locations="{Binding Locations}"
                                Stroke="Red"
                                StrokeThickness="3">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="selectedPath"
                                                    Storyboard.TargetProperty="StrokeThickness"
                                                    To="5"
                                                    Duration="0:0:0.1" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetName="selectedPath"
                                                    Storyboard.TargetProperty="Stroke.Color"
                                                    To="GreenYellow"
                                                    Duration="0:0:0.1" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </map:MapPolyline>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PointItemStyle" TargetType="map:MapItem">
                <EventSetter Event="TouchDown" Handler="MapItemTouchDown" />
                <Setter Property="map:MapPanel.Location" Value="{Binding Location}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="map:MapItem">
                            <Canvas>
                                <Path
                                    x:Name="selectedPath"
                                    Fill="White"
                                    Opacity="0">
                                    <Path.Data>
                                        <EllipseGeometry RadiusX="15" RadiusY="15" />
                                    </Path.Data>
                                </Path>
                                <Path Fill="Transparent" StrokeThickness="2">
                                    <Path.Stroke>
                                        <SolidColorBrush Color="Gray" />
                                    </Path.Stroke>
                                    <Path.Data>
                                        <EllipseGeometry RadiusX="8" RadiusY="8" />
                                    </Path.Data>
                                </Path>
                                <Grid Canvas.Left="15" Canvas.Top="-8">
                                    <Rectangle
                                        x:Name="labelBackground"
                                        Fill="White"
                                        Opacity="0" />
                                    <xamlMapConstructs:OutlinedText
                                        Margin="1"
                                        OutlineThickness="1.5"
                                        Text="{Binding Name}" />
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="labelBackground"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0.7"
                                                    Duration="0:0:0.1" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="selectedPath"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0.7"
                                                    Duration="0:0:0.1" />
                                                <ColorAnimation
                                                    Storyboard.TargetName="selectedPath"
                                                    Storyboard.TargetProperty="Fill.Color"
                                                    To="GreenYellow"
                                                    Duration="0:0:0.1" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Panel.ZIndex" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PushpinItemStyle" TargetType="map:MapItem">
                <EventSetter Event="TouchDown" Handler="MapItemTouchDown" />
                <Setter Property="map:MapPanel.Location" Value="{Binding Location}" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Visibility">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource LocationToVisibilityConverter}">
                            <Binding Path="(map:MapPanel.ParentMap)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(map:MapPanel.ViewportPosition)" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="map:MapItem">
                            <map:Pushpin Content="{Binding Name}" Foreground="{TemplateBinding Foreground}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Panel.ZIndex" Value="1" />
                        <Setter Property="Foreground" Value="OrangeRed" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <map:WebMercatorProjection x:Key="WebMercatorProjection" />
            <map:WorldMercatorProjection x:Key="WorldMercatorProjection" />
            <map:EquirectangularProjection x:Key="EquirectangularProjection" />
            <map:OrthographicProjection x:Key="OrthographicProjection" />
            <map:GnomonicProjection x:Key="GnomonicProjection" />
            <map:StereographicProjection x:Key="StereographicProjection" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <map:Map
            x:Name="map"
            Center="{Binding MapCenter}"
            ManipulationInertiaStarting="MapManipulationInertiaStarting"
            MapLayer="{Binding MapLayers.CurrentMapLayer}"
            MapProjection="{Binding SelectedValue, ElementName=projectionComboBox, FallbackValue={StaticResource WebMercatorProjection}, TargetNullValue={StaticResource WebMercatorProjection}}"
            MaxZoomLevel="20"
            MouseLeave="MapMouseLeave"
            MouseLeftButtonDown="MapMouseLeftButtonDown"
            MouseMove="MapMouseMove"
            MouseRightButtonDown="MapMouseRightButtonDown"
            ZoomLevel="15">
            <Image
                x:Name="mapImage"
                map:MapPanel.BoundingBox="53.54031,8.08594,53.74871,8.43750"
                Opacity="0.5"
                Stretch="Fill" />

            <map:MapGraticule x:Name="mapGraticule" Opacity="0.6" />
            <map:MapScale HorizontalAlignment="Left" VerticalAlignment="Bottom" />

            <!--  use ItemTemplate or ItemContainerStyle alternatively  -->
            <!--<map:MapItemsControl ItemTemplate="{StaticResource PolylineItemTemplate}" ItemsSource="{Binding Polylines}" />-->
            <map:MapItemsControl
                x:Name="MapPolylineItemControl"
                ItemContainerStyle="{StaticResource PolylineItemStyle}"
                ItemsSource="{Binding Polylines}"
                SelectionMode="Extended">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding PolylinesMapSelectionChangedCommand}"
                                               CommandParameter="{Binding ElementName=MapPolylineItemControl, Path=SelectedItems}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </map:MapItemsControl>

            <map:MapItemsControl
                x:Name="MapPointsItemControl"
                ItemContainerStyle="{StaticResource PointItemStyle}"
                ItemsSource="{Binding Points}"
                SelectionMode="Extended">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding PointsMapSelectionChangedCommand}"
                                               CommandParameter="{Binding ElementName=MapPointsItemControl, Path=SelectedItems}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </map:MapItemsControl>

            <map:MapItemsControl
                x:Name="MapPushPinsItemControl"
                ItemContainerStyle="{StaticResource PushpinItemStyle}"
                ItemsSource="{Binding Pushpins}"
                SelectionMode="Extended" />

            <Path
                map:MapPanel.Location="53.5,8.2"
                Fill="#1F007F00"
                Stroke="Blue"
                StrokeThickness="3">
                <Path.Data>
                    <EllipseGeometry
                        RadiusX="1852"
                        RadiusY="1852"
                        Transform="{Binding ScaleRotateTransform, ElementName=map}" />
                </Path.Data>
            </Path>

            <map:Pushpin
                map:MapPanel.Location="53.5,8.2"
                Background="Yellow"
                Content="N 53°30' E 8°12'"
                Foreground="Blue">
                <map:Pushpin.Visibility>
                    <MultiBinding Converter="{StaticResource LocationToVisibilityConverter}">
                        <Binding Path="(map:MapPanel.ParentMap)" RelativeSource="{RelativeSource Self}" />
                        <Binding Path="(map:MapPanel.ViewportPosition)" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </map:Pushpin.Visibility>
            </map:Pushpin>
        </map:Map>

        <Border
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Background="#7FFFFFFF">
            <TextBlock
                Margin="2"
                map:HyperlinkText.InlinesSource="{Binding MapLayer.Description, ElementName=map}"
                FontSize="10" />
        </Border>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Name="mouseLocation"
                Margin="5"
                VerticalAlignment="Bottom"
                FontFamily="Segoe UI Mono" />
            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <StackPanel Margin="5">
                    <TextBlock
                        Margin="0,0,0,2"
                        HorizontalAlignment="Center"
                        FontSize="10"
                        Foreground="Gray"
                        Text="Zoom Level" />
                    <Slider
                        Width="100"
                        VerticalAlignment="Center"
                        Maximum="{Binding MaxZoomLevel, ElementName=map}"
                        Minimum="{Binding MinZoomLevel, ElementName=map}"
                        SmallChange="0.01"
                        ToolTip="Zoom Level"
                        Value="{Binding TargetZoomLevel, ElementName=map}" />
                </StackPanel>
                <StackPanel Margin="5">
                    <TextBlock
                        Margin="0,0,0,2"
                        HorizontalAlignment="Center"
                        FontSize="10"
                        Foreground="Gray"
                        Text="Heading" />
                    <Slider
                        Width="100"
                        VerticalAlignment="Center"
                        LargeChange="45"
                        Maximum="360"
                        Minimum="0"
                        SmallChange="5"
                        ToolTip="Heading"
                        Value="{Binding TargetHeading, ElementName=map}" />
                </StackPanel>
                <StackPanel Margin="5">
                    <TextBlock
                        Margin="0,0,0,2"
                        HorizontalAlignment="Center"
                        FontSize="10"
                        Foreground="Gray"
                        Text="Image Opacity" />
                    <Slider
                        Width="100"
                        VerticalAlignment="Center"
                        Maximum="1"
                        Minimum="0"
                        ToolTip="Image Opacity"
                        Value="{Binding Opacity, ElementName=mapImage}" />
                </StackPanel>
                <CheckBox
                    Margin="7"
                    VerticalAlignment="Bottom"
                    Checked="SeamarksChecked"
                    Content="Seamarks"
                    ToolTip="Seamarks Overlay"
                    Unchecked="SeamarksUnchecked"
                    Visibility="Collapsed" />
                <ComboBox
                    Width="200"
                    Margin="5"
                    VerticalAlignment="Bottom"
                    ItemsSource="{Binding MapLayers.MapLayerNames}"
                    SelectedItem="{Binding MapLayers.CurrentMapLayerName}"
                    ToolTip="Map Layer" />
                <ComboBox
                    x:Name="projectionComboBox"
                    Width="120"
                    Margin="5"
                    VerticalAlignment="Bottom"
                    SelectedIndex="0"
                    SelectedValuePath="Tag"
                    ToolTip="Map Projection">
                    <ComboBoxItem Content="Web Mercator" Tag="{StaticResource WebMercatorProjection}" />
                    <ComboBoxItem Content="World Mercator" Tag="{StaticResource WorldMercatorProjection}" />
                    <ComboBoxItem Content="Equirectangular" Tag="{StaticResource EquirectangularProjection}" />
                    <ComboBoxItem Content="Orthographic" Tag="{StaticResource OrthographicProjection}" />
                    <ComboBoxItem Content="Gnomonic" Tag="{StaticResource GnomonicProjection}" />
                    <ComboBoxItem Content="Stereographic" Tag="{StaticResource StereographicProjection}" />
                </ComboBox>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
var searchDirectory = new DirectoryInfo(Environment.CurrentDirectory);

Console.Write(
    $"Pointless Waymarks README.md -> Project Specific README_[project] running in {searchDirectory.FullName}");

var mainReadme = new FileInfo(Path.Combine(searchDirectory.FullName, "README-Fossil.md"));

if (mainReadme.Exists && File.Exists(Path.Combine(searchDirectory.FullName, "PointlessWaymarks.sln")))
{
    var gitMirrorInformation =
        $"""
         ## This is a mirror of the [Pointless Waymarks Project Fossil Repository](https://chiselapp.com/user/cmiles/repository/pointless-waymarks-project/)

         Information, posts about development and installers can be found on [Pointless Waymarks Software](https://software.pointlesswaymarks.com/). The applications in this project:
          - [Pointless Waymarks CMS](https://software.pointlesswaymarks.com/Posts/Software/pointless-waymarks-cms/pointless-waymarks-cms.html): A Windows Desktop application that generates static websites based on database information and a settings file. It is used to create this site, Pointless Waymarks and cmiles - info.
          - [Pointless Waymarks GeoTools](https://software.pointlesswaymarks.com/Posts/Software/pointless-waymarks-geotools/pointless-waymarks-geotools.html): A Windows Desktop application for GeoTagging photos, automatically tagging photos with the National Park/Wilderness/Public Land Type the photo was taken in and downloading GPX files from Garmin Connect.
          - [Pointless Waymarks Feed Reader](https://software.pointlesswaymarks.com/Posts/Software/pointless-waymarks-feed-reader/pointless-waymarks-feed-reader.html): Windows Desktop application for reading content published via RSS and ATOM Feeds. No account or server is required and all your data remains on your local system.
          - [Pointless Waymarks Utilitarian Image Combiner](https://software.pointlesswaymarks.com/Posts/Software/pointless-waymarks-utilitarian-image-combiner/pointless-waymarks-utilitarian-image-combiner.html): Windows Desktop application that makes it easy to combine multiple images into a single horizontal stack, vertical stack or grid. This program creates utilitarian, documentary, output rather than attempting to create clever designs.
          - [Pointless Waymarks Cloud Backup](https://software.pointlesswaymarks.com/Posts/Software/pointless-waymarks-cloud-backup/pointless-waymarks-cloud-backup.html): Windows Desktop and Command Line programs to create simple backups on S3 compatible cloud storage systems (Amazon S3, Cloudflare R2 and Wasabi are currently supported).
          - [Pointless Waymarks PowerShell Runner](https://software.pointlesswaymarks.com/Posts/Software/pointless-waymarks-powershell-runner/pointless-waymarks-powershell-runner.html): Windows Desktop Task Scheduler that runs PowerShell and C# scripts.

         This project uses the [Pointless Waymarks Tools](https://chiselapp.com/user/cmiles/repository/pointless-waymarks-tools/index) and a number of incredible packages that are genorously provided as open source/free software, see the list below!

         Thanks to [Chisel](https://chiselapp.com/) for the generous hosting of Fossil repositories and [Fossil](https://fossil-scm.org/home/doc/trunk/www/index.wiki) for an amazing alternative to git and GitHub.

         *This file is generated by the Pointless Waymarks PublishReadmeHelper - do not edit this directly, changes will be overwritten.*

         ### Mirrored README.md from the [Pointless Waymarks Project Fossil Repository](https://chiselapp.com/user/cmiles/repository/pointless-waymarks-project/) follows below...

         {await File.ReadAllTextAsync(mainReadme.FullName)}
         """;

    await File.WriteAllTextAsync(Path.Combine(searchDirectory.FullName, "README.md"), gitMirrorInformation);

    Console.WriteLine("Found the main README-Fossil.md - prepended mirror message and wrote to README.md");
    Console.WriteLine();
}

var subDirectories = searchDirectory.GetDirectories("*", SearchOption.AllDirectories)
    .Where(d => !d.FullName.Contains(Path.DirectorySeparatorChar + "bin", StringComparison.OrdinalIgnoreCase) &&
                !d.FullName.Contains(Path.DirectorySeparatorChar + "obj", StringComparison.OrdinalIgnoreCase) &&
                !d.FullName.Contains(Path.DirectorySeparatorChar + "debug", StringComparison.OrdinalIgnoreCase) &&
                !d.FullName.Contains(Path.DirectorySeparatorChar + "release", StringComparison.OrdinalIgnoreCase) &&
                !d.FullName.Contains(Path.DirectorySeparatorChar + ".", StringComparison.OrdinalIgnoreCase))
    .ToArray();

Console.WriteLine($"Scanning {subDirectories.Length} SubDirectories.");

foreach (var subDirectory in subDirectories)
    try
    {


        var possibleReadme = new FileInfo(Path.Combine(subDirectory.FullName, "README.md"));

        if (subDirectory.Name.Equals("PointlessWaymarksTools", StringComparison.OrdinalIgnoreCase))
        {
            var toolsMainReadme = Path.Combine(subDirectory.FullName, "README-Fossil.md");

            if (File.Exists(toolsMainReadme))
            {
                var gitMirrorInformation =
                    $"""
                     ## This is a mirror of the [Pointless Waymarks Tools Fossil Repository](https://chiselapp.com/user/cmiles/repository/pointless-waymarks-tools/index)

                     Thanks to [Chisel](https://chiselapp.com/) for the generous hosting of Fossil repositories and [Fossil](https://fossil-scm.org/home/doc/trunk/www/index.wiki) for an amazing alternative to git and GitHub.

                     *This file is generated by the Pointless Waymarks PublishReadmeHelper - do not edit this directly, changes will be overwritten.*

                     ### Mirrored README.md from the [Pointless Waymarks Tools Fossil Repository](https://chiselapp.com/user/cmiles/repository/pointless-waymarks-tools/index) follows below...

                     {await File.ReadAllTextAsync(toolsMainReadme)}
                     """;

                await File.WriteAllTextAsync(Path.Combine(subDirectory.FullName, "README.md"), gitMirrorInformation);
				
				Console.WriteLine(subDirectory.FullName);
                Console.WriteLine(
                    "  Found the main README-Fossil.md - prepended mirror message and wrote to README.md");
                Console.WriteLine();
            }

            continue;
        }


        if (!possibleReadme.Exists) continue;

        var readmeName = string.Join("-", subDirectory.Name.Split(".")[1..]);

        if (string.IsNullOrWhiteSpace(readmeName))
        {
            var possibleSolutionFile = subDirectory.EnumerateFiles("*.sln", SearchOption.TopDirectoryOnly).ToList();

            readmeName = possibleSolutionFile.Any()
                ? possibleSolutionFile.First().Name.Split(".")[0]
                : subDirectory.Name;
        }

        var targetReadme = new FileInfo(Path.Combine(subDirectory.FullName, $"README_{readmeName}.md"));

        possibleReadme.CopyTo(targetReadme.FullName, true);

        Console.WriteLine($"  Copied {possibleReadme.FullName} to {targetReadme.FullName}");
    }
    catch (Exception e)
    {
        Console.WriteLine($"!!! Error - continuing...{Environment.NewLine}{e}");
    }